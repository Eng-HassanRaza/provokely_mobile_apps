name: iOS IPA (unsigned)

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Ensure iOS platform exists (keep committed Podfile)
        run: |
          if [ ! -f ios/Runner.xcodeproj/project.pbxproj ]; then
            flutter create --platforms=ios .
          fi
          ls -la ios || true

      - name: Flutter pub get
        run: flutter pub get

      - name: Ensure iOS 13.0 deployment target in Podfile
        run: |
          /usr/bin/sed -i '' "s/^platform :ios, .*/platform :ios, '13.0'/" ios/Podfile || true

      - name: CocoaPods install
        run: |
          cd ios
          pod repo update
          pod install --repo-update --verbose

      - name: Configure deep links
        run: bash scripts/config_platforms.sh || true

      - name: Build unsigned IPA
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL || 'https://example.com' }}
        run: |
          # 1) Prebuild with Flutter to generate assets and configs
          flutter build ios --release --no-codesign \
            --dart-define=API_BASE_URL=${API_BASE_URL}

          # 2) Archive with xcodebuild for a generic iOS device with signing disabled
          xcodebuild -workspace ios/Runner.xcworkspace \
            -scheme Runner -configuration Release -archivePath build/Runner.xcarchive \
            -destination 'generic/platform=iOS' -sdk iphoneos \
            CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY="" \
            DEVELOPMENT_TEAM= CODE_SIGN_STYLE=Manual \
            PRODUCT_BUNDLE_IDENTIFIER=com.example.provokelyApp \
            ONLY_ACTIVE_ARCH=NO clean archive | xcpretty

          echo "Archive contents:" && ls -R build/Runner.xcarchive || true

          # 3) Package IPA manually from archive
          APP_PATH="build/Runner.xcarchive/Products/Applications/Runner.app"
          if [ ! -d "$APP_PATH" ]; then
            echo "Runner.app not found in archive. Falling back to flutter build output."
            APP_PATH=$(ls -d build/ios/iphoneos/*.app 2>/dev/null | head -n 1)
          fi
          test -d "$APP_PATH" || (echo "Runner.app not found" && exit 1)
          mkdir -p artifacts/Payload
          cp -R "$APP_PATH" artifacts/Payload/Runner.app
          (cd artifacts && zip -r Runner.ipa Payload)
          rm -rf artifacts/Payload

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa-unsigned
          path: artifacts/Runner.ipa


