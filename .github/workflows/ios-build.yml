name: iOS IPA (unsigned)

on:
  workflow_dispatch:

jobs:
  build-ios:
    runs-on: macos-latest
    env:
      # Prefer setting this as a repo/org Secret or Variable with trailing slash
      API_BASE_URL: ${{ secrets.API_BASE_URL || 'https://provokely.com/' }}
      ENABLE_FCM: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Ensure iOS platform exists (keep committed Podfile)
        run: |
          if [ ! -f ios/Runner.xcodeproj/project.pbxproj ]; then
            flutter create --platforms=ios .
          fi
          ls -la ios || true

      - name: Flutter pub get
        run: flutter pub get

      - name: Ensure iOS 13.0 deployment target in Podfile
        run: |
          /usr/bin/sed -i '' "s/^platform :ios, .*/platform :ios, '13.0'/" ios/Podfile || true

      - name: CocoaPods install
        run: |
          cd ios
          pod repo update
          pod install --repo-update --verbose

      - name: Configure deep links
        run: bash scripts/config_platforms.sh || true

      - name: Echo build defines
        run: |
          echo "API_BASE_URL=${API_BASE_URL}"
          echo "ENABLE_FCM=${ENABLE_FCM}"

      - name: Build unsigned IPA (Flutter)
        run: |
          flutter build ipa --release --no-codesign \
            --dart-define=API_BASE_URL=${API_BASE_URL} \
            --dart-define=ENABLE_FCM=${ENABLE_FCM}

          # Fallback: if Flutter did not produce an IPA, create one manually
          if compgen -G "build/ios/ipa/*.ipa" > /dev/null; then
            echo "IPA found in build/ios/ipa"
          else
            echo "No IPA found, attempting manual packaging from .app"
            # Build a .app if not already present
            flutter build ios --release --no-codesign \
              --dart-define=API_BASE_URL=${API_BASE_URL} \
              --dart-define=ENABLE_FCM=${ENABLE_FCM}

            # Locate the built .app
            APP_PATH=$(ls -d build/ios/iphoneos/*.app build/ios/Release-iphoneos/*.app 2>/dev/null | head -n 1)
            if [ -z "$APP_PATH" ]; then
              echo "Runner.app not found; aborting." && exit 1
            fi
            echo "Using APP_PATH=${APP_PATH}"

            # Package into an IPA at build/ios/ipa/Runner.ipa
            mkdir -p build/ios/ipa/Payload
            cp -R "$APP_PATH" build/ios/ipa/Payload/Runner.app
            (cd build/ios/ipa && zip -r Runner.ipa Payload)
            rm -rf build/ios/ipa/Payload
          fi

      - name: List build outputs
        run: |
          echo "Listing build directories:" && ls -la build || true
          echo "Listing build/ios:" && ls -la build/ios || true
          echo "Listing build/ios/ipa:" && ls -la build/ios/ipa || true

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa-unsigned
          path: build/ios/ipa/*.ipa


